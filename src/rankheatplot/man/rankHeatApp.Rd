% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app.R
\name{rankHeatApp}
\alias{rankHeatApp}
\title{Run the rankheat shiny app}
\usage{
rankHeatApp()
}
\arguments{
\item{errorList}{list, a list of error messages, typically keyed by sheet, errors can be a vector of message}

\item{output}{reactiveValues, the output to update}

\item{cols}{data.frame, a subset of relevant columns}

\item{typeMap}{list, keyed by (expected) colname in df, with optional keys 'type' and 'gt'}

\item{optionSet}{list, the list of set options, keyed by sheet name}

\item{values}{vector, the choices that are NOT allowed}

\item{selected}{string | NULL, the current selection value}

\item{id}{string, the id (not selector) of the radio group}

\item{value}{string, the value of the option}

\item{valueList}{the list of variables, probably reactiveValues}

\item{prefixVec}{vector of prefixes, probably list of sheets}

\item{pth}{path to excel sheet}

\item{netmetaRes}{netmeta object, results of netmeta function}

\item{sheetName}{char, the name of the sheet}

\item{options}{list, list keyed by sheet of arguments to pass to functions}

\item{sheets}{list, list keyed by sheet name of user-supplied dataframes}

\item{input}{reactiveValues, the list of inputs, which will contain formatting values}

\item{ranking}{named vector, typically retrieved from netrank() result as
result$ranking.common or result$ranking.random}

\item{treament}{string}

\item{option}{list, a list of arguments selected in the ui}

\item{sheet}{df, a dataframe derived from a sheet of the uploaded excel book}
}
\value{
void

void
Validate that sheets have the appropriate columns for the options selected

list, list of errors, possibly empty. Each sheet that has an error
will have an entry in the list, keyed by sheet name, with the string message as content.
Confirm that the sheet has the appropriate columns, types, and contents
for the options selected

list, a list of errors keyed by field name

list, keyed by field name with error message or empty if no errors
Determine whether the given set of options is complete

list, a list of missing fields, keyed by sheet name

void
disable an option within a radio group

void

string

list

list of dataframes
Run netmeta function with user values converting arm to contrast

dataframe, dataframe that can be passed to rank heat plot function
get rankings

dataframe, dataframe that can be passed to rank heat plot function
format data to be passed to plotting function

dataframe, dataframe that can be passed to rank heat plot function if successful,
else a list of fields that failed the connectivity test

dataframe
transform arm data to contrast data if needed
}
\description{
Run the rankheat shiny app
}
